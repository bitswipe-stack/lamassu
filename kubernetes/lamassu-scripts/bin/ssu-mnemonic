#!/usr/bin/env node

const path = require('path')
const os = require('os')
const fs = require('fs')
const bip39 = require('bip39')
const chalk = require('chalk')
const inquirer = require('inquirer')

var options

try {
  const configPath = path.resolve(os.homedir(), '.lamassu', 'lamassu.json')
  options = JSON.parse(fs.readFileSync(configPath))
} catch (err) {
  console.log('Missing configuration file -- exiting.')
  process.exit(1)
}

const entropyPath = options.seedPath
var entropy

function newMnemonic () {
  const questions = [
    {
      type: 'input',
      name: 'mnemonic',
      message: 'Enter your mnemonic phrase:',
      filter: val => val.trim(),
      validate: val => {
        return bip39.validateMnemonic(val)
        ? true
        : 'Please enter a valid mnemonic.'
      }
    }
  ]

  return inquirer.prompt(questions).then(result => saveMnemonic(result.mnemonic))
}

function saveMnemonic (mnemonic) {
  const entropy = bip39.mnemonicToEntropy(mnemonic)
  fs.writeFileSync(entropyPath, entropy)
}

try {
  entropy = fs.readFileSync(entropyPath, 'utf8').trim()

  console.log('Your master seed is: \n')
  const mnemonic = bip39.entropyToMnemonic(entropy)
  const words = mnemonic.split(' ')
  console.log(words.slice(0, 6).join(' '))
  console.log(words.slice(6, 12).join(' '))
  console.log(words.slice(12, 18).join(' '))
  console.log(words.slice(18).join(' '))
  console.log('\nWrite it down on a piece of paper and keep it in a safe place.\n')
  console.log(chalk.bold('WARNING') + ': Anybody who sees this phrase can steal your coins.')
} catch (err) {
  newMnemonic()
  .then(() => console.log('Successfully restored mnemonic.'))
  .then(() => process.exit(0))
}
